# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version 2.0.0 (ec59fc1 develop)
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-20 23:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../src/kdijkstra/doc/index.rst:13
# 6aaa67f868c94bcebedff0d9b6bbc0ad
msgid "pgr_kDijkstra - Mutliple destination Shortest Path Dijkstra"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:21
# ee4e6e056ef94162b94f8636f5c3376f
msgid "Name"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:23
# 2d709d18954641b597770775ff87dade
msgid "``pgr_kdijkstraCost`` - Returns the costs for K shortest paths using Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:24
# 8bcf4c02b3f6463ea75e4fb2708da7e8
msgid "``pgr_kdijkstraPath`` - Returns the paths for K shortest paths using Dijkstra algorithm."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:28
# ef1cd7a391de409cba81bdd115784ec3
msgid "Synopsis"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:30
# 8a11e61122cd463d99fdac93194cd7cf
msgid "These functions allow you to have a single start node and multiple destination nodes and will compute the routes to all the destinations from the source node. Returns a set of :ref:`pgr_costResult3 <type_cost_result3>` or :ref:`pgr_costResult3 <type_cost_result3>`. ``pgr_kdijkstraCost`` returns one record for each destination node and the cost is the total code of the route to that node. ``pgr_kdijkstraPath`` returns one record for every edge in that path from source to destination and the cost is to traverse that edge."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:42
# 2e6b40fae35a40d6b56c796db44a4160
msgid "Description"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:44
# 602c5e9ef9c64e89872c0d8eeb63a4cc
msgid "a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:51
# 7ecda910cff640e48ae7bd0695feacd6
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:52
# 6df081cd41d149d1be9df7bb4dc7bf84
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:53
# 7b3366691730415d8a9c301fc71046e3
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:54
# 48ad166112314b3ab8c11eb2e867ea3a
msgid "``float8`` value, of the edge traversal cost. A negative cost will prevent the edge from being inserted in the graph."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:55
# 5bd811beffa84857ae93ce0de5132792
msgid "(optional) the cost for the reverse traversal of the edge. This is only used when the ``directed`` and ``has_rcost`` parameters are ``true`` (see the above remark about negative costs)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:57
# 8b2179c5e5b74cbb9ea4b21705565231
msgid "``int4`` id of the start point"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:58
# b3b823b1d5214f909ede6ff7b374f7e8
msgid "``int4[]`` an array of ids of the end points"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:59
# 7400ad3c28494e1fb86adb793b91b12e
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:60
# aec8a664c5dc4269b6873b6e9b46bd2b
msgid "if ``true``, the ``reverse_cost`` column of the SQL generated set of rows will be used for the cost of the traversal of the edge in the opposite direction."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:63
# a11d93108c4e4e12898a109f61c26d75
msgid "``pgr_kdijkstraCost`` returns set of :ref:`type_cost_result`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:65
#: ../../../src/kdijkstra/doc/index.rst:73
# 1b0930ce21814f45839271e62a3d5d36
# 77a7a9e75266415f9095e03b614ac380
msgid "row sequence"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:66
# 5e37a4d901f64faaa06c70b9ca97036e
msgid "path vertex source id (this will always be source start point in the query)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:67
# 01b5d726eea84a1bb858a2b91310477e
msgid "path vertex target id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:68
# f44fb1681c1e4b7f9572fcbb91f2c8e1
msgid "cost to traverse the path from ``id1`` to ``id2``. Cost will be -1.0 if there is no path to that target vertex id."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:71
# ff5d9ed5e4634f309b6af9fc985751e1
msgid "``pgr_kdijkstraPath`` returns set of :ref:`type_cost_result3`:"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:74
# d8f50abdc6dd4e149528d9d2885a47c2
msgid "path target id (identifies the target path)."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:75
# 6ae425e33b9c46d5be56c882e775c887
msgid "path edge source node id"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:76
# db75cc6a2a3a41d6b8eee33bd29ca64a
msgid "path edge id (``-1`` for the last row)"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:77
# 32492418d06d43989fa941686423a5c6
msgid "cost to traverse this edge or -1.0 if there is no path to this target"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:81
# 85d595c9f8f24971b2c606885ace7416
msgid "History"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:82
# 8e4721ea03a242b2a6fbcf68f0d1c3cc
msgid "New in version 2.0.0"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:86
# 3be53d7c0dc4403fa6cad01bb93523ac
msgid "Examples"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:88
# 21a4665f12354eeea8d18d9ab397f2aa
msgid "Returning a ``cost`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:123
# 408a995e00a845e1b596ed849c1f9f9e
msgid "Returning a ``path`` result"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:144
# 506e4a697b024782b946d9b1011a8397
msgid "There is no assurance that the result above will be ordered in the direction of flow of the route, ie: it might be reversed. You will need to check if ``st_startPoint()`` of the route is the same as the start node location and if it is not then call ``st_reverse()`` to reverse the direction of the route. This behavior is a function of PostGIS functions ``st_linemerge()`` and ``st_union()`` and not pgRouting."
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:153
# 967147e03d27452b8580123e2c967e88
msgid "See Also"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:155
# 6f0ca1536d8548469279ef3677dbad14
msgid ":ref:`type_cost_result`"
msgstr ""

#: ../../../src/kdijkstra/doc/index.rst:156
# 32209a360c8f43db930a3bf51cdf7f11
msgid "http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"
msgstr ""

