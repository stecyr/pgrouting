# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version 2.0.0 (ec59fc1 develop)
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-22 13:52\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/tutorial/tutorial.rst:13
# cc286a8aa26b414ba5c056e7e967f754
msgid "Getting Started"
msgstr ""

#: ../../src/tutorial/tutorial.rst:15
# 203987e9bc9545e386abb61978fa7973
msgid "This is a simple guide to walk you through the steps of getting started with pgRouting. In this guide we will cover:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:18
#: ../../src/tutorial/tutorial.rst:27
# cf084ff2892b4ce09042343d046fd022
# 09f0c2436ee0452ca34f4ea785294ca0
msgid "How to create a database to use for our project"
msgstr ""

#: ../../src/tutorial/tutorial.rst:19
#: ../../src/tutorial/tutorial.rst:61
# c3031c03516e400eb51fd389eab9d370
# 8e16b537fced4fd98de6654b3d25882d
msgid "How to load some data"
msgstr ""

#: ../../src/tutorial/tutorial.rst:20
#: ../../src/tutorial/tutorial.rst:77
# 28162361c9ef451a8269bdc8c569c9c5
# be1e900598c64c579d8a2306852c3c77
msgid "How to build a topology"
msgstr ""

#: ../../src/tutorial/tutorial.rst:21
#: ../../src/tutorial/tutorial.rst:93
# 422d77e9576145f6b3e41ee3e9d8019c
# e02a5f0e2c4c4c108a97d142e7719614
msgid "How to check your graph for errors"
msgstr ""

#: ../../src/tutorial/tutorial.rst:22
#: ../../src/tutorial/tutorial.rst:121
# 48af8de98aa440599ef7c5e08a987c73
# 00b0784fc2ba469ca4d4987d90a07e2a
msgid "How to compute a route"
msgstr ""

#: ../../src/tutorial/tutorial.rst:23
#: ../../src/tutorial/tutorial.rst:142
# a6c42f436e6240b0bd853d2459a82af5
# 8f60e469188446368b6e9dd27fa4362c
msgid "How to use other tools to view your graph and route"
msgstr ""

#: ../../src/tutorial/tutorial.rst:24
#: ../../src/tutorial/tutorial.rst:147
# e8d64e7e71f94995b63b80ec6c489433
# 20eafe14706e4660b2f9886ce1f6b357
msgid "How to create a web app"
msgstr ""

#: ../../src/tutorial/tutorial.rst:29
# b1db71933e1241eeae8298bba077f388
msgid "The first thing we need to do is create a database and load pgrouting in the database. Typically you will create a database for each project. Once you have a database to work in, your can load your data and build your application in that database. This makes it easy to move your project later if you want to to say a production server."
msgstr ""

#: ../../src/tutorial/tutorial.rst:35
# e9ea8391635c4aeea6230a1dc512ca40
msgid "For Postgresql 9.1 and later versions"
msgstr ""

#: ../../src/tutorial/tutorial.rst:44
# b5416a83185a4b968116495c15a2dbb9
msgid "For older versions of postgresql"
msgstr ""

#: ../../src/tutorial/tutorial.rst:63
# 4d3bdf2c0daf49e19b0cc8ec9a54ce6d
msgid "How you load your data will depend in what form it comes it. There are various OpenSource tools that can help you, like:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:66
# 443c825aa19945f694b869caa419068a
msgid "this is the postgresql shapefile loader"
msgstr ""

#: ../../src/tutorial/tutorial.rst:67
# 4d91dcd01dac46f59ceb42aeeac5dc8d
msgid "this is a vector data conversion utility"
msgstr ""

#: ../../src/tutorial/tutorial.rst:68
# 99f1dae37c3742db82e18bf14675f806
msgid "this is a tool for loading OSM data into postgresql"
msgstr ""

#: ../../src/tutorial/tutorial.rst:70
# 0fc4acb74524472e89a9867f716c6941
msgid "So these tools and probably others will allow you to read vector data and and can load that data into your database as a table of some kind. At this point you need to know a little about your data structure and content. One easy way to browse you data table is with pgAdmin3 or phpPgAdmin."
msgstr ""

#: ../../src/tutorial/tutorial.rst:79
# 3eb60b0320c94c54b413905edad6aeda
msgid "Next we need to build a topology for our street data. What this means is that for any given edge in your street data the ends of that edge will be connected to a unique node and to other edges that are also connected to that same unique node. Once all the edges are connected to nodes we have a graph that can be used for routing with pgrouting. We provide a tools the will help with this:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:89
# 69e88d4dcd4b4de68a07f7e1bbe05c2f
msgid "See :ref:`pgr_create_topology` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:95
# a1b054cc1a1a4d12a2a11405bbdec85b
msgid "There are lots of possible sources for errors in a graph. The data that you started with may not have been designed with routing in mind. A graph as some very specific requirments. One it that it is *NODED*, this means that except for some very specific use cases, each road segments starts and ends at a node and that in general is does not cross another road segment that it should be connected to."
msgstr ""

#: ../../src/tutorial/tutorial.rst:102
# 6c5337ea36644d71841a60e4a9bb5ba5
msgid "There can be other errors like the direction of a one-way street being entered in the wrong direction. We do not have tools to search for all possible errors but we have some basic tools that might help."
msgstr ""

#: ../../src/tutorial/tutorial.rst:113
# 3fece9ebff854721b5715cc977ce6d6e
msgid "See :ref:`analytics` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:115
# 7a98ae8da3ae48e1a7c5d54e44a48c26
msgid "If your data needs to be *NODED*, we have a tool that can help for that also."
msgstr ""

#: ../../src/tutorial/tutorial.rst:117
# 08121e9261964dd58ac553d088c2ed4d
msgid "See :ref:`pgr_node_network` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:123
# 719d8eadd02e428f9c88ee09711fd78e
msgid "Once you have all the prep work done above, computing a route is fairly easy. We have a lot of different algorithms but they can work with your prepared road network. The general form of a route query is:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:131
# 9b06e28539b841019a313bfef4d6706a
msgid "As you can see this is fairly straight forward and you can look and the specific algorithms for the details on how to use them. What you get as a result from these queries will be a set of record of type :ref:`type_cost_result` or :ref:`type_geom_result`. These results have information like edge id and/or the node id along with the cost or geometry for the step in the path from *start* to *end*. Using the ids you can join these result back to your edge table to get more information about each step in the path."
msgstr ""

#: ../../src/tutorial/tutorial.rst:139
# d3652f3967364e05a51d770bf6c22ed7
msgid "See also :ref:`type_cost_result` and :ref:`type_geom_result`."
msgstr ""

#: ../../src/tutorial/tutorial.rst:144
#: ../../src/tutorial/tutorial.rst:149
# ebd4b3f1e2e64e668cbd59b14d10059c
# 631194a2c36c43fa84fca3ad63545a1c
msgid "TBD"
msgstr ""

