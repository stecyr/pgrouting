# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version 2.0.0 (ec59fc1 develop)
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-20 23:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/tutorial/tutorial.rst:13
# a163e7eb407140e396726b23099c3b13
msgid "Getting Started"
msgstr ""

#: ../../src/tutorial/tutorial.rst:15
# 00488b82333b476da7a87c83794faad3
msgid "This is a simple guide to walk you through the steps of getting started with pgRouting. In this guide we will cover:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:18
#: ../../src/tutorial/tutorial.rst:27
# 6c88e647d62f4a3698232d4d1ba824a2
# d11c0982bffd44d19750eebb3f3a510f
msgid "How to create a database to use for our project"
msgstr ""

#: ../../src/tutorial/tutorial.rst:19
#: ../../src/tutorial/tutorial.rst:61
# 834c5d78a0774cf388b23fef5ddac24f
# 2090bfbe4ba446e19455878da7f643bc
msgid "How to load some data"
msgstr ""

#: ../../src/tutorial/tutorial.rst:20
#: ../../src/tutorial/tutorial.rst:77
# 6d2155588b2a42e8853e1538b95d279a
# 9ff346fe0c2c4ab980e8da814d505669
msgid "How to build a topology"
msgstr ""

#: ../../src/tutorial/tutorial.rst:21
#: ../../src/tutorial/tutorial.rst:93
# 04d786a4f9154af1911d6dc452c2aac0
# 478a4b8b518544f9ba78748bf7fbc2f9
msgid "How to check your graph for errors"
msgstr ""

#: ../../src/tutorial/tutorial.rst:22
#: ../../src/tutorial/tutorial.rst:121
# 8d668dec5f744ab59ab7c106a0ab2fa6
# c440186346894a12b50c9d4cedd45399
msgid "How to compute a route"
msgstr ""

#: ../../src/tutorial/tutorial.rst:23
#: ../../src/tutorial/tutorial.rst:142
# fde9d6464d044c948a4fee9237b60bb4
# 05d06d8d80b64206a9becffe391fd597
msgid "How to use other tools to view your graph and route"
msgstr ""

#: ../../src/tutorial/tutorial.rst:24
#: ../../src/tutorial/tutorial.rst:147
# 07f0b836e84042d2b3f1c824d40b7a7b
# a5b0f7781d6647e1a9f639f88a8e8f56
msgid "How to create a web app"
msgstr ""

#: ../../src/tutorial/tutorial.rst:29
# bb7825549b454d9d8f22247f0f7d9020
msgid "The first thing we need to do is create a database and load pgrouting in the database. Typically you will create a database for each project. Once you have a database to work in, your can load your data and build your application in that database. This makes it easy to move your project later if you want to to say a production server."
msgstr ""

#: ../../src/tutorial/tutorial.rst:35
# 6c34ba2f85764eada7204c8806722361
msgid "For Postgresql 9.1 and later versions"
msgstr ""

#: ../../src/tutorial/tutorial.rst:44
# f583c6983c8f4dfa8df45dc5756c766b
msgid "For older versions of postgresql"
msgstr ""

#: ../../src/tutorial/tutorial.rst:63
# 54da07e730cf4e3c86cf4d0d8f298435
msgid "How you load your data will depend in what form it comes it. There are various OpenSource tools that can help you, like:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:66
# 14aa256d8a8345ca9015f10b349aa707
msgid "this is the postgresql shapefile loader"
msgstr ""

#: ../../src/tutorial/tutorial.rst:67
# 55d31fd961464c45881c80e19d48f208
msgid "this is a vector data conversion utility"
msgstr ""

#: ../../src/tutorial/tutorial.rst:68
# 24f143f427ba4fc4bdb0e41621186df4
msgid "this is a tool for loading OSM data into postgresql"
msgstr ""

#: ../../src/tutorial/tutorial.rst:70
# 43697f436fdb4458948c36600c043141
msgid "So these tools and probably others will allow you to read vector data and and can load that data into your database as a table of some kind. At this point you need to know a little about your data structure and content. One easy way to browse you data table is with pgAdmin3 or phpPgAdmin."
msgstr ""

#: ../../src/tutorial/tutorial.rst:79
# 02d4533e6a2f4b6d857de35f850764a0
msgid "Next we need to build a topology for our street data. What this means is that for any given edge in your street data the ends of that edge will be connected to a unique node and to other edges that are also connected to that same unique node. Once all the edges are connected to nodes we have a graph that can be used for routing with pgrouting. We provide a tools the will help with this:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:89
# b546f7c6c2e345a792e34b635094372b
msgid "See :ref:`pgr_create_topology` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:95
# 1ee3d51bb5154627a5a07b4ba6d43160
msgid "There are lots of possible sources for errors in a graph. The data that you started with may not have been designed with routing in mind. A graph as some very specific requirments. One it that it is *NODED*, this means that except for some very specific use cases, each road segments starts and ends at a node and that in general is does not cross another road segment that it should be connected to."
msgstr ""

#: ../../src/tutorial/tutorial.rst:102
# 5a3da07347e640d4a656a2a3c7d9f5b1
msgid "There can be other errors like the direction of a one-way street being entered in the wrong direction. We do not have tools to search for all possible errors but we have some basic tools that might help."
msgstr ""

#: ../../src/tutorial/tutorial.rst:113
# d8de31c59ce145b0b327f4b6786d8f91
msgid "See :ref:`analytics` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:115
# ab583a46492d4e96acc6bc30acf61c9a
msgid "If your data needs to be *NODED*, we have a tool that can help for that also."
msgstr ""

#: ../../src/tutorial/tutorial.rst:117
# 1f5226db073c4540a5c166198fb51b5a
msgid "See :ref:`pgr_node_network` for more information."
msgstr ""

#: ../../src/tutorial/tutorial.rst:123
# a760a0980d3847f8a8eaa30e0cca8856
msgid "Once you have all the prep work done above, computing a route is fairly easy. We have a lot of different algorithms but they can work with your prepared road network. The general form of a route query is:"
msgstr ""

#: ../../src/tutorial/tutorial.rst:131
# f3b891a98e234bf2ac879130212e30bd
msgid "As you can see this is fairly straight forward and you can look and the specific algorithms for the details on how to use them. What you get as a result from these queries will be a set of record of type :ref:`type_cost_result` or :ref:`type_geom_result`. These results have information like edge id and/or the node id along with the cost or geometry for the step in the path from *start* to *end*. Using the ids you can join these result back to your edge table to get more information about each step in the path."
msgstr ""

#: ../../src/tutorial/tutorial.rst:139
# 8fa9b131a1c64b5b94c86a2ec857db41
msgid "See also :ref:`type_cost_result` and :ref:`type_geom_result`."
msgstr ""

#: ../../src/tutorial/tutorial.rst:144
#: ../../src/tutorial/tutorial.rst:149
# ea5a094c53034ae489fee800fbeadcd6
# 295aa24f142a46fca2a48ccd6865762e
msgid "TBD"
msgstr ""

