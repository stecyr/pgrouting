# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version 2.0.0 (ec59fc1 develop)
# This file is distributed under the same license as the pgRouting package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-20 23:09\n"
"PO-Revision-Date: 2013-09-20 14:14+0000\n"
"Last-Translator: Daniel Kastl\n"
"Language-Team: German (http://www.transifex.com/projects/p/pgrouting/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 91cbb3c351b84c8fa75e7a0299e952f7
#: ../../../src/common/doc/functions/analyze_oneway.rst:13
msgid "pgr_analyzeOneway"
msgstr ""

# abdc83d7a5334a2698b39f96f87a3bea
#: ../../../src/common/doc/functions/analyze_oneway.rst:20
msgid "Name"
msgstr "Name"

# 35a83ba6f035495d958ff28d57ba92b2
#: ../../../src/common/doc/functions/analyze_oneway.rst:22
msgid ""
"``pgr_analyzeOneway`` — Analyzes oneway Sstreets and identifies flipped "
"segments."
msgstr ""

# dd970bb47fe14804b14807eb7ced31cc
#: ../../../src/common/doc/functions/analyze_oneway.rst:26
msgid "Synopsis"
msgstr "Übersicht"

# 2b399271f7f7411f8fd1cebe9bc8b47a
#: ../../../src/common/doc/functions/analyze_oneway.rst:28
msgid ""
"This function analyzes oneway streets in a graph and identifies any flipped "
"segments."
msgstr ""

# 26c28f78527144388b6a4c48aad5cc5b
#: ../../../src/common/doc/functions/analyze_oneway.rst:40
msgid "Description"
msgstr "Beschreibung"

# 317f5049e40b4bc4aa8bb5daa2246143
#: ../../../src/common/doc/functions/analyze_oneway.rst:42
msgid ""
"The analyses of one way segments is pretty simple but can be a powerful "
"tools to identifying some the potential problems created by setting the "
"direction of a segment the wrong way. A node is a `source` if it has edges "
"the exit from that node and no edges enter that node. Conversely, a node is "
"a `sink` if all edges enter the node but none exit that node. For a `source`"
" type node it is logically impossible to exist because no vehicle can exit "
"the node if no vehicle and enter the node. Likewise, if you had a `sink` "
"node you would have an infinite number of vehicle piling up on this node "
"because you can enter it but not leave it."
msgstr ""

# e06ef300d0564fe6bffe963600769991
#: ../../../src/common/doc/functions/analyze_oneway.rst:44
msgid ""
"So why do we care if the are not feasible? Well if the direction of an edge "
"was reversed by mistake we could generate exactly these conditions. Think "
"about a divided highway and on the north bound lane one segment got entered "
"wrong or maybe a sequence of multiple segments got entered wrong or maybe "
"this happened on a round-about. The result would be potentially a `source` "
"and/or a `sink` node."
msgstr ""

# 4819d0ceb0ff454e8902ac242f8629a1
#: ../../../src/common/doc/functions/analyze_oneway.rst:46
msgid ""
"So by counting the number of edges entering and exiting each node we can "
"identify both `source` and `sink` nodes so that you can look at those areas "
"of your network to make repairs and/or report the problem back to your data "
"vendor."
msgstr ""

# b8e690b5fda540fb926f970eb3774a1e
#: ../../../src/common/doc/functions/analyze_oneway.rst:49
msgid "Prerequisites"
msgstr ""

# 317eafc27f5a456bb8546faaa686165c
#: ../../../src/common/doc/functions/analyze_oneway.rst:50
msgid ""
"The  edge table to be analyzed must contain a source column and a target "
"column filled with id's of the vertices of the segments and the "
"corresponding vertices table <edge_table>_vertices_pgr that stores the "
"vertices information."
msgstr ""

# f5dd61e2a9a94ddca0d4d1d00d519d6e
#: ../../../src/common/doc/functions/analyze_oneway.rst:52
msgid ""
"Use :ref:`pgr_createVerticesTable <pgr_create_vert_table>` to create the "
"vertices table."
msgstr ""

# f3944571df2a413bbd6f1442a416057b
#: ../../../src/common/doc/functions/analyze_oneway.rst:53
msgid ""
"Use :ref:`pgr_createTopology <pgr_create_topology>` to create the topology "
"and the vertices table."
msgstr ""

# 66c5cc5dbc0f47eda6e0f818c0a54e40
#: ../../../src/common/doc/functions/analyze_oneway.rst:56
msgid "Parameters"
msgstr ""

# f34a83898ead499b9b334a0c73fa2611
#: ../../../src/common/doc/functions/analyze_oneway.rst:57
msgid "``text`` Network table name. (may contain the schema name as well)"
msgstr ""

# 447b685c433547a58975dbbc7df067b9
#: ../../../src/common/doc/functions/analyze_oneway.rst:58
msgid "``text[]`` source node **in** rules"
msgstr ""

# 9ac93a1e4c394e308d82e8ec414bea5f
#: ../../../src/common/doc/functions/analyze_oneway.rst:59
msgid "``text[]`` source node **out** rules"
msgstr ""

# 55e8bd8f3b3c4939a9744ff607db43b3
#: ../../../src/common/doc/functions/analyze_oneway.rst:60
msgid "``text[]`` target node **in** rules"
msgstr ""

# 32e78839296449b2878b701bb9c05835
#: ../../../src/common/doc/functions/analyze_oneway.rst:61
msgid "``text[]`` target node **out** rules"
msgstr ""

# de5a6aadda01498fa00386e62498b8c1
#: ../../../src/common/doc/functions/analyze_oneway.rst:62
msgid ""
"``text`` oneway column name name of the network table. Default value is "
"``oneway``."
msgstr ""

# ef1993298a064871a46d32d6b8671632
#: ../../../src/common/doc/functions/analyze_oneway.rst:63
msgid ""
"``text`` Source column name of the network table. Default value is "
"``source``."
msgstr ""

# ee8620a297b243faa9031b38462837bc
#: ../../../src/common/doc/functions/analyze_oneway.rst:64
msgid ""
"``text``  Target column name of the network table.  Default value is "
"``target``."
msgstr ""

# 6b6a2241cb0f4f34a810e5477526a20d
#: ../../../src/common/doc/functions/analyze_oneway.rst:65
msgid ""
"``boolean`` flag to treat oneway NULL values as bi-directional.  Default "
"value is ``true``."
msgstr ""

# baf8c177b0ca4d5e860e8683f5a0adf2
#: ../../../src/common/doc/functions/analyze_oneway.rst:67
msgid ""
"It is strongly recommended to use the named notation. See "
":ref:`pgr_createVerticesTable <pgr_create_vert_table>` or "
":ref:`pgr_createTopology <pgr_create_topology>` for examples."
msgstr ""

# dc9b5aa13e5c407e8fd5768a62ec8444
#: ../../../src/common/doc/functions/analyze_oneway.rst:70
msgid "The function returns:"
msgstr ""

# a82a88a14eb4422687565de0dfb0bb65
#: ../../../src/common/doc/functions/analyze_oneway.rst:72
msgid "``OK`` after the analysis has finished."
msgstr ""

# db661e12599f4cba9ff6e8ae1666c1e2
#: ../../../src/common/doc/functions/analyze_oneway.rst:74
msgid "Uses the vertices table: <edge_table>_vertices_pgr."
msgstr ""

# 9639916088744c048dd06b3fcfe4c73d
#: ../../../src/common/doc/functions/analyze_oneway.rst:75
msgid ""
"Fills completely the ``ein`` and ``eout`` columns of the vertices table."
msgstr ""

# 676309eedf0346ca8a70c3b888aea56a
#: ../../../src/common/doc/functions/analyze_oneway.rst:77
msgid "``FAIL`` when the analysis was not completed due to an error."
msgstr ""

# 213dc892bb854b8aabd2ba621fa4d247
#: ../../../src/common/doc/functions/analyze_oneway.rst:79
msgid "The vertices table is not found."
msgstr ""

# 5efaa3f543a24bfa99034732fcafd284
#: ../../../src/common/doc/functions/analyze_oneway.rst:80
msgid ""
"A required column of the Network table is not found or is not of the "
"appropriate type."
msgstr ""

# 5da2b2b5ce9744efa971e30fd43b46cf
#: ../../../src/common/doc/functions/analyze_oneway.rst:81
msgid "The names of source , target or oneway are the same."
msgstr ""

# 6b834d15496c414a901b8d548e6201fd
#: ../../../src/common/doc/functions/analyze_oneway.rst:83
msgid ""
"The rules are defined as an array of text strings that if match the "
"``oneway`` value would be counted as ``true`` for the source or target "
"**in** or **out** condition."
msgstr ""

# aed8919a26db4059ab2d30c6b148b498
#: ../../../src/common/doc/functions/analyze_oneway.rst:86
msgid "The Vertices Table"
msgstr ""

# 76b924bcbbcf422bb94f96817b6dc3ac
#: ../../../src/common/doc/functions/analyze_oneway.rst:87
msgid ""
"The vertices table can be created with :ref:`pgr_createVerticesTable "
"<pgr_create_vert_table>` or :ref:`pgr_createTopology <pgr_create_topology>`"
msgstr ""

# 26fe962a924a404da3ce84f03f25e44e
#: ../../../src/common/doc/functions/analyze_oneway.rst:89
msgid "The structure of the vertices table is:"
msgstr ""

# 8cafa36aa21145fcb2f97d96a72ed2f4
#: ../../../src/common/doc/functions/analyze_oneway.rst:91
msgid "``bigint`` Identifier of the vertex."
msgstr ""

# 13e546552029439f92b59488ea0f9d9e
#: ../../../src/common/doc/functions/analyze_oneway.rst:92
msgid ""
"``integer`` Number of vertices in the edge_table that reference this vertex."
" See :ref:`pgr_analyzeGgraph <pgr_analyze_graph>`."
msgstr ""

# ed9f7042488540c6b61bfb8fb283a47c
#: ../../../src/common/doc/functions/analyze_oneway.rst:93
msgid ""
"``integer``  Indicator that the vertex might have a problem. See "
":ref:`pgr_analyzeGraph <pgr_analyze_graph>`."
msgstr ""

# 6cb7e914fd8743cbbc8a898e92150f01
#: ../../../src/common/doc/functions/analyze_oneway.rst:94
msgid ""
"``integer`` Number of vertices in the edge_table that reference this vertex "
"as incoming."
msgstr ""

# 7213ec1afaf747efa46e9979842b2572
#: ../../../src/common/doc/functions/analyze_oneway.rst:95
msgid ""
"``integer`` Number of vertices in the edge_table that reference this vertex "
"as outgoing."
msgstr ""

# fcfca6b6931d408998014b19637561c0
#: ../../../src/common/doc/functions/analyze_oneway.rst:96
msgid "``geometry`` Point geometry of the vertex."
msgstr ""

# 3c5ea531d5434b66a34df19345905c46
#: ../../../src/common/doc/functions/analyze_oneway.rst:100
msgid "History"
msgstr "Geschichte"

# f7cd9a1fbba943bebd3666079f64bc0a
#: ../../../src/common/doc/functions/analyze_oneway.rst:101
msgid "New in version 2.0.0"
msgstr "Neu in Version 2.0.0"

# bd9af7b7d31849b1a3d45cdb6cc8e59d
#: ../../../src/common/doc/functions/analyze_oneway.rst:105
msgid "Examples"
msgstr "Beispiele"

# f5218598dec94316a8edb4cedba0afab
#: ../../../src/common/doc/functions/analyze_oneway.rst:129
msgid "The queries use the :ref:`sampledata` network."
msgstr ""

# 9ec3dc57e0cf41268c044f24533c0185
#: ../../../src/common/doc/functions/analyze_oneway.rst:133
msgid "See Also"
msgstr "Siehe auch"

# 8f3e61bdcd774ca08aa3c01d7d9bd02b
#: ../../../src/common/doc/functions/analyze_oneway.rst:135
msgid ":ref:`topology`  for an overview of a topology for routing algorithms."
msgstr ""

# 4d88f4d34e7d476598f12e33eb4a95a5
#: ../../../src/common/doc/functions/analyze_oneway.rst:136
msgid ":ref:`analytics` for an overview of the analysis of a graph."
msgstr ""

# eb1bff3904d54e5195b67005dfe24b90
#: ../../../src/common/doc/functions/analyze_oneway.rst:137
msgid ""
":ref:`pgr_analyze_graph` to analyze the edges and vertices of the edge "
"table."
msgstr ""

# 191b61edcc454e428fb6ed8d59755f05
#: ../../../src/common/doc/functions/analyze_oneway.rst:138
msgid ""
":ref:`pgr_create_vert_table` to reconstruct the vertices table based on the "
"source and target information."
msgstr ""
